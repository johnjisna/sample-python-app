pipeline {
    agent any

    environment {
        DOCKER_IMAGE_NAME = 'jisnajohn6060/sample-django-app'
        DOCKER_IMAGE_TAG = "${env.BRANCH_NAME}-${env.BUILD_NUMBER}"
        DOCKER_CREDENTIALS = credentials('docker-hub-credentials')
    }

    stages {
        stage('Checkout') {
            steps {
                // Clean up any existing files from previous builds
                deleteDir()
                // Clone the Git repository
                git 'https://github.com/johnjisna/sample-python-app.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                // Build Docker image
                script {
                    def dockerImage = docker.build("${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}", ".")
                    // Push Docker image to Docker Hub
                    docker.withRegistry('', DOCKER_CREDENTIALS) {
                        dockerImage.push()
                    }
                }
                // Optionally, clean up Docker environment after build
                sh "docker-compose down"
                sh "docker-compose up -d"
            }
        }
    }

    post {
        success {
            echo "Docker image successfully built and pushed: ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}"
        }
        failure {
            echo "Failed to build or push Docker image: ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}"
        }
    }
}

